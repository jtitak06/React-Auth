[{"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\index.js":"1","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\App.js":"2","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\reportWebVitals.js":"3","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\Routes.js":"4","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\UserInfoPage.js":"5","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\SignUpPage.js":"6","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\LogInPage.js":"7","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\PrivateRoute.js":"8","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\useToken.js":"9","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\useUser.js":"10"},{"size":504,"mtime":1669100722860,"results":"11","hashOfConfig":"12"},{"size":164,"mtime":1669100722992,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1669100722773,"results":"14","hashOfConfig":"12"},{"size":717,"mtime":1670476129827,"results":"15","hashOfConfig":"12"},{"size":3595,"mtime":1671941237837,"results":"16","hashOfConfig":"12"},{"size":1963,"mtime":1671733336287,"results":"17","hashOfConfig":"12"},{"size":1654,"mtime":1671733330516,"results":"18","hashOfConfig":"12"},{"size":247,"mtime":1671657588902,"results":"19","hashOfConfig":"12"},{"size":312,"mtime":1671644151175,"results":"20","hashOfConfig":"12"},{"size":579,"mtime":1671645745299,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"t3so9b",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\index.js",[],["47","48"],"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\App.js",[],"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\Routes.js",[],"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\UserInfoPage.js",["49"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n\n    const { id, email, info } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState(info.favoriteFood || '');\n    const [hairColor, setHairColor] = useState(info.hairColor || '');\n    const [bio, setBio] = useState(info.bio || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                favoriteFood,\n                hairColor,\n                bio,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n        // We'll want to log the user out here\n        // and send them to the \"login page\"\n        alert('Log out functionality not implemented yet');\n    }\n    \n    const resetValues = () => {\n        setFavoriteFood(info.favoriteFood);\n        setHairColor(info.hairColor);\n        setBio(info.bio);\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for {email}</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\SignUpPage.js",["50","51"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useToken } from '../auth/useToken';\r\n\r\n\r\nexport function SignUpPage() {\r\n    const [token, setToken] = useToken();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [emailValue, setEmailValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSignUpClicked = async () => {\r\n        const response = await axios.post('/api/signup', {\r\n            email: emailValue,\r\n            password: passwordValue,\r\n        });\r\n        const { token } = response.data;\r\n        setToken(token);\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div className=\"content-container\">\r\n            <h1>Sign Up</h1>\r\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\r\n            <input\r\n                value={emailValue}\r\n                onChange={e => setEmailValue(e.target.value)}\r\n                placeholder=\"someone@gmail.com\" />\r\n            <input \r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"password\" />\r\n            <input \r\n                value={confirmPasswordValue}\r\n                onChange={e => setConfirmPasswordValue(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"confirm password\" />\r\n            <hr />\r\n            <button \r\n                disabled={\r\n                    !emailValue || !passwordValue ||\r\n                    passwordValue !== confirmPasswordValue\r\n                }\r\n                onClick={onSignUpClicked}>Sign Up</button>\r\n            <button onClick={() => history.push('/login')}>Already have an account? Log in</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\pages\\LogInPage.js",["52","53"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useToken } from '../auth/useToken';\r\n\r\nexport function LogInPage() {\r\n    const [token, setToken] = useToken();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [emailValue, setEmailValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onLogInClicked = async () => {\r\n        const response = await axios.post('/api/login', {\r\n            email: emailValue,\r\n            password: passwordValue,\r\n        });\r\n        const { token } = response.data;\r\n        setToken(token);\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div className=\"content-container\">\r\n            <h1>Log In</h1>\r\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\r\n            <input\r\n                value={emailValue}\r\n                onChange={e => setEmailValue(e.target.value)}\r\n                placeholder=\"someone@gmail.com\" />\r\n            <input \r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"password\" />\r\n            <hr />\r\n            <button \r\n                disabled={!emailValue || !passwordValue}\r\n                onClick={onLogInClicked}>Log In</button>\r\n            <button onClick={() => history.push('/forgot-password')}>Forgot your password?</button>\r\n            <button onClick={() => history.push('/signup')}>Don't have an account? Sign Up</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\useToken.js",["54"],"import { useState } from 'react';\r\n\r\nexport const useToken = () => {\r\n    const [token, setTokenInternal] = useState(() => {\r\n        return localStorage.getItem('token');\r\n    });\r\n\r\n    const setToken = newToken => {\r\n        localStorage.setItem('token', newToken);\r\n    };\r\n\r\n    return [token, setToken];\r\n}","C:\\Users\\jtita\\OneDrive\\Desktop\\Projects\\React-Auth\\front-end\\src\\auth\\useUser.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":15,"column":11,"nodeType":"61","messageId":"62","endLine":15,"endColumn":18},{"ruleId":"59","severity":1,"message":"63","line":8,"column":12,"nodeType":"61","messageId":"62","endLine":8,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":9,"column":26,"nodeType":"61","messageId":"62","endLine":9,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":7,"column":12,"nodeType":"61","messageId":"62","endLine":7,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":8,"column":26,"nodeType":"61","messageId":"62","endLine":8,"endColumn":41},{"ruleId":"59","severity":1,"message":"65","line":4,"column":19,"nodeType":"61","messageId":"62","endLine":4,"endColumn":35},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'setTokenInternal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]